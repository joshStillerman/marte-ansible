---

- hosts: mdsplus
  become: yes 

  tasks:

  - name: "Create mdsplus-data"
    group:
      name: mdsplus-data
  
  - name: "Create jas"
    user:
      name: jas
      groups:
      - sudo
      - mdsplus-data
      create_home: yes
      shell: /bin/bash
      state: present

  - name: "Create garnier"
    user:
      name: garnier
      groups:
      - mdsplus-data
      - sudo
      create_home: yes
      shell: /bin/bash
      state: present

  - name: "Install aptitude"
    apt:
      name: "aptitude"
      state: present
      force_apt_get: yes

  - name: "Update all packages"
    apt:
      name: "*"
      state: latest

  - name: "Install software"
    become: yes
    apt:
      update_cache: yes
      name:
      - apt-file
      - apt-transport-https
      - at
      - build-essential
      - curl
      - dmeventd
      - emacs
      - epstool
      - ffmpeg
      - finger
      - freecad
      - freeglut3-dev
      - freetds-dev
      - gfortran
      - git
      - git-lfs
      - gv
      - hdf5-tools
      - htop
      - ipython3
      - lib32stdc++6
      - lib32z1
      - libblas-dev
      - libboost-iostreams-dev
      - libcanberra-doc
      - libcanberra-gtk-common-dev
      - libcanberra-gtk3-0 
      - libcanberra-gtk3-dev 
      - libcanberra-gtk3-module 
      - libcanberra-gtk-dev 
      - libcanberra-gtk-module 
      - libcanberra-gtk0 
      - libcanberra-gtk-module
      - libcppunit-dev
      - libdevmapper-event1.02.1
      - libev-dev
      - libfftw3-dev
      - libfltk-gl1.3
      - libfltk1.3
      - libfltk1.3-dev
      - libfreeimage-dev
      - libfreetype6-dev
      - libgl2ps-dev
      - libglu1-mesa-dev
      - libgstreamer-plugins-base1.0-dev
      - libgstreamer1.0-dev
      - libgtk-3-dev
      - libhdf5-dev
      - liblapack-dev
      - liblapack-dev
      - libmrm4
      - libnotify-dev
      - libopenblas-dev
      - libreadline5
      - libsdl2-dev
      - libtbb-dev
      - libtiff-dev
      - libxi-dev
      - libxmu-dev
      - libxt-dev
      - linux-headers-generic
      - net-tools
      - netcdf-bin
      - pv
      - python
      - python3-pip
      - python3-matplotlib
      - python3-scipy
      - python3-spyder
      - python3-future
      - scalapack-doc
      - screen
      - software-properties-common 
      - sshpass
      - tcsh
      - tmux
      - traceroute
      - unzip
      - vim
      - virtualenv
      - vlc
      - wget
      - xinetd
      - python-gi-cairo
      - python3-gi-cairo
      state: present

  - name: 'Install pip software'
    become: yes
    pip:
      executable: pip3
      name:
      - pycairo
      - cairocffi
      - redis 
      state: present

  - name: "Copy mdsplus.conf to /etc"
    become: yes
    copy:
      src: "etc/mdsplus.conf"
      dest: "/etc/mdsplus.conf"
      owner: root
      group: root
      mode: u=rwx,g=rx,o=rx

  - name: "Copy README.md to /"
    become: yes
    copy:
      src: "README.md"
      dest: "/README.md"

  - name: "Copy mdsip.hosts to /etc"
    become: yes
    copy:
      src: "etc/mdsip.hosts"
      dest: "/etc/mdsip.hosts"

#  - name: "Copy ntp.conf to /etc/ntp.conf"
#    become: yes
#    copy:
#      src: "etc/ntp.conf"
#      dest: "/etc/ntp.conf"
#      owner: root
#      group: root
#      mode: u=rw,g=r,o=r
#
#  - name: "Restart the ntp service"
#    become: yes
#    service:
#      name: ntp
#      state: restarted

  - name: "Create mdsplus"
    user:
      name: mdsplus 
      groups:
      - mdsplus-data
      state: present

  - name: "Create mdsplus"
    user:
      name: mdsplus 
      state: present

  - name: "Ensure /var/log/mdsplus exists"
    become: yes
    file:
      dest: "/var/log/mdsplus"
      owner: mdsplus
      group: mdsplus
      mode: u=rwx,g=rx,o=rx
      state: directory

  - name: "Ensure /var/log/mdsplus/mdsipd exists"
    become: yes
    file:
      dest: "/var/log/mdsplus/mdsipd"
      owner: mdsplus
      group: mdsplus
      mode: u=rwx,g=rx,o=rx
      state: directory
  
  - name: "Ensure /trees exists"
    become: yes
    file:
      dest: "/trees"
      owner: root
      group: root
      mode: u=rwx,g=rx,o=rx
      state: directory

  - name: Put the sample tree in place 
    unarchive:
      src: tmp/bagel-trees.tgz
      dest: /trees
      remote_src: no

  - name: "Configure the MDSplus key (apt)"
    apt_key:
      url: "http://www.mdsplus.org/dist/mdsplus.gpg.key"
      state: present

  - name: "Configure the MDSplus-alpha repository (apt)"
    apt_repository:
      repo: "deb http://www.mdsplus.org/dist/Ubuntu18/repo MDSplus alpha"
      state: present

  - name: "Ensure required mdsplus packages are installed (apt)"
    apt:
      name:
      - mdsplus-alpha
      - mdsplus-alpha-devel
      - mdsplus-alpha-kernel
      - mdsplus-alpha-kernel-bin
      - mdsplus-alpha-mitdevices
      - mdsplus-alpha-rfxdevices
      - mdsplus-alpha-d3d
      - mdsplus-alpha-idl
      - mdsplus-alpha-matlab
      - mdsplus-alpha-motif
      - mdsplus-alpha-motif-bin
      - mdsplus-alpha-mssql
      - mdsplus-alpha-python
      - mdsplus-alpha-java
      - mdsplus-alpha-java-bin
      state: present
      update_cache: yes
    register: mdsplus_install

  - name: "Ensure mdsplus-* packages are up to date (apt)"
    apt:
      name: "mdsplus-*"
      state: latest
      update_cache: yes
      only_upgrade: yes
    register: mdsplus_update

  - name: make sure /opt/scripts exists
    become: yes
    file:
      dest: "/opt/scripts"
      owner: mdsplus
      group: mdsplus
      mode: u=rwx,g=rwx,o=rwx
      state: directory

  - name: copy the tester program into /opt/scripts
    copy:
      src: opt/scripts/tester.cpp
      dest: /opt/scripts/tester.cpp
      mode: u=rwx,g=rwx,o=rwx

  - name: copy the test ramp generator to /opt/scripts
    copy:
      src: opt/scripts/ramps.py
      dest: /opt/scripts/ramps.py
      mode: u=rwx,g=rwx,o=rwx

  - name: build the tester program
    shell: 'cd /opt/scripts; c++ tester.cpp -o tester -I/usr/local/mdsplus/include -L/usr/local/mdsplus/lib -l MdsObjectsCppShr -lev'

  - name: "add the grafana gpg.key"
    apt_key:
      url: https://packages.grafana.com/gpg.key 
      state: present 

  - name: "Configure the grafana repository (apt)"
    apt_repository:
      repo: "deb https://packages.grafana.com/oss/deb stable main"
      state: present
    
  - name: "Ensure required grafana packages are installed (apt)"
    apt:
      name:
      - grafana
      state: present
      update_cache: yes
    register: grafana_install

  - name: "Ensure grafana packages are up to date (apt)"
    apt:
      name: "grafana"
      state: latest
      update_cache: yes
      only_upgrade: yes
    register: grafana_update

  - name: "Ensure /var/lib/grafana/plugins exists"
    become: yes
    file:
      dest: "/var/lib/grafana/plugins"
      owner: root
      group: root
      mode: u=rwx,g=rx,o=rx
      state: directory

  - name: make sure the mdsip grafana plugin is there
    unarchive:
      src: tmp/grafana-mdsip.tgz
      dest: /var/lib/grafana/plugins
      remote_src: no

  - name: make sure the streams grafana plugin is there
    unarchive:
      src: tmp/grafana-streams.tgz
      dest: /var/lib/grafana/plugins
      remote_src: no

  - name: get the nodesource ppa for node Version 14
    get_url:
      url: https://deb.nodesource.com/setup_14.x
      dest: /tmp/nodesource_setup.sh
      mode: '0440'

  - name: run the nodesource_setup file we just got
    shell:  'cd /tmp; bash nodesource_setup.sh'

  - name: install nodejs V14
    apt:
      name: nodejs
      update_cache: yes
      state: present
    register: node_update

  - name: install yarn globally
    shell: 'npm install --global yarn'

  - name: make sure mdsplus/node has websocket
    shell: 'cd /usr/local/mdsplus/node; yarn add websocket'

  - name: make sure the service file for mds-bridge  is in /etc/systemd
    copy:
      src: etc/systemd/system/mds-bridge.service
      dest: /etc/systemd/system/mds-bridge.service
      mode: u=rwx,g=rx,o=rx

  - name: "Configure /usr/local/mdsplus/nodejs/mds-bridge.json for debug=0"
    lineinfile:
      path: /usr/local/mdsplus/nodejs/mds-bridge.json
      regexp: '^    "debug" :'
      line: '    "debug" :  0,'

  - name: "remove 1 debug print from /usr/local/mdsplus/nodejs/mds-bridge.js "
    lineinfile:
      path: /usr/local/mdsplus/nodejs/mds-bridge.js
      regexp: '    console.log(configObj);'
      line: '    if (debug >= 1) console.log(configObj);'

  - name: enable the mds-bridge service
    systemd:
      name: mds-bridge
      daemon_reload: yes
      enabled: yes
      state: started
      masked: no

  - name: start the mds-bridge service
    systemd:
      name: mds-bridge
      state: started
      masked: no

  - name: build the mdsip grafana plugin
    shell: "cd /var/lib/grafana/plugins/mdsip; yarn install"

  - name: build the streams grafana plugin
    shell: "cd /var/lib/grafana/plugins/streams; yarn install"

  - name: enable service grafana-server and ensure it is not masked
    systemd:
      name: grafana-server
      daemon_reload: yes
      enabled: yes
      state: started
      masked: no

  - name: "Configure /etc/bashrc.bash"
    lineinfile:
      insertbefore: BOF
      line: ". /usr/local/mdsplus/setup.sh"
      path: "/etc/bash.bashrc"
      state: present

  - name: "Configure /etc/bashrc.bash"
    become: yes
    lineinfile:
      insertbefore: BOF
      line: ". /usr/local/mdsplus/setup.sh"
      path: "/etc/bash.bashrc"
      state: present

  - name: "Enable mdsip in /etc/xinetd.d/mdsip"
    become: yes
    lineinfile:
      path: /etc/xinetd.d/mdsip
      regexp: "^(.*)disable"
      line: "        disable         = no"
      state: present

  - name: Link versioned python shared image to plain .so
    become: yes
    file:
      src: /usr/lib/x86_64-linux-gnu/libpython2.7.so.1
      dest: /usr/lib/x86_64-linux-gnu/libpython2.7.so
      state: link

  - name: make sure mdsplus python libraries are installed
    become: yes
    shell: "cd /usr/local/mdsplus/python/MDSplus;python setup.py install;python3 setup.py install"
